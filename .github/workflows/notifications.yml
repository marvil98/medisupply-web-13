name: Notifications and Cleanup

on:
  workflow_run:
    workflows: ["CI - Build and Test", "CD - Deploy"]
    types: [completed]
  schedule:
    # Ejecutar limpieza semanalmente los domingos a las 3:00 AM UTC
    - cron: '0 3 * * 0'
  workflow_dispatch:

jobs:
  # Job para notificaciones
  notify:
    name: Send Notifications
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion != 'skipped'
    
    steps:
      - name: Check workflow result
        run: |
          if [ "${{ github.event.workflow_run.conclusion }}" == "success" ]; then
            echo "✅ Workflow completed successfully"
            echo "Workflow: ${{ github.event.workflow_run.name }}"
            echo "Branch: ${{ github.event.workflow_run.head_branch }}"
            echo "Commit: ${{ github.event.workflow_run.head_sha }}"
          else
            echo "❌ Workflow failed"
            echo "Workflow: ${{ github.event.workflow_run.name }}"
            echo "Branch: ${{ github.event.workflow_run.head_branch }}"
            echo "Commit: ${{ github.event.workflow_run.head_sha }}"
          fi
          
      - name: Send Slack notification (optional)
        if: always()
        run: |
          # Aquí puedes agregar notificaciones a Slack, Discord, etc.
          echo "Notification would be sent here"
          # Ejemplo con curl:
          # curl -X POST -H 'Content-type: application/json' \
          #   --data '{"text":"Workflow ${{ github.event.workflow_run.name }} completed with status: ${{ github.event.workflow_run.conclusion }}"}' \
          #   ${{ secrets.SLACK_WEBHOOK_URL }}
          
      - name: Send email notification (optional)
        if: always()
        run: |
          # Aquí puedes agregar notificaciones por email
          echo "Email notification would be sent here"

  # Job para limpieza de artefactos antiguos
  cleanup:
    name: Cleanup Old Artifacts
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
      - name: Delete old artifacts
        uses: actions/github-script@v7
        with:
          script: |
            const artifacts = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100
            });
            
            const cutoffDate = new Date();
            cutoffDate.setDate(cutoffDate.getDate() - 30); // Eliminar artefactos de más de 30 días
            
            for (const artifact of artifacts.data.artifacts) {
              const createdAt = new Date(artifact.created_at);
              if (createdAt < cutoffDate) {
                console.log(`Deleting artifact: ${artifact.name} (created: ${artifact.created_at})`);
                await github.rest.actions.deleteArtifact({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: artifact.id
                });
              }
            }
            
      - name: Cleanup old workflow runs
        uses: actions/github-script@v7
        with:
          script: |
            const workflows = await github.rest.actions.listWorkflowRunsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100
            });
            
            const cutoffDate = new Date();
            cutoffDate.setDate(cutoffDate.getDate() - 90); // Eliminar runs de más de 90 días
            
            for (const run of workflows.data.workflow_runs) {
              const createdAt = new Date(run.created_at);
              if (createdAt < cutoffDate && run.status === 'completed') {
                console.log(`Deleting workflow run: ${run.id} (created: ${run.created_at})`);
                await github.rest.actions.deleteWorkflowRun({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  run_id: run.id
                });
              }
            }

  # Job para generar reportes de métricas
  metrics:
    name: Generate Metrics Report
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Generate metrics report
        run: |
          echo "# Medisupply CI/CD Metrics Report" > metrics-report.md
          echo "Generated on: $(date)" >> metrics-report.md
          echo "" >> metrics-report.md
          echo "## Repository Statistics" >> metrics-report.md
          echo "- Repository: ${{ github.repository }}" >> metrics-report.md
          echo "- Default Branch: ${{ github.ref_name }}" >> metrics-report.md
          echo "- Last Commit: $(git log -1 --format='%H %s')" >> metrics-report.md
          echo "" >> metrics-report.md
          echo "## Workflow Statistics" >> metrics-report.md
          echo "- Total workflows: $(ls -1 .github/workflows/*.yml | wc -l)" >> metrics-report.md
          echo "- CI workflows: $(grep -l 'name: CI' .github/workflows/*.yml | wc -l)" >> metrics-report.md
          echo "- CD workflows: $(grep -l 'name: CD' .github/workflows/*.yml | wc -l)" >> metrics-report.md
          
      - name: Upload metrics report
        uses: actions/upload-artifact@v4
        with:
          name: metrics-report
          path: metrics-report.md
          retention-days: 7










