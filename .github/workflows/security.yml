name: Security and Dependencies

on:
  schedule:
    # Ejecutar todos los días a las 2:00 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  NODE_VERSION: '20'

jobs:
  # Job para auditoría de dependencias
  dependency-audit:
    name: Dependency Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run npm audit
        run: |
          npm audit --audit-level=moderate
          
      - name: Run npm audit fix (dry run)
        run: |
          npm audit fix --dry-run
          
      - name: Check for outdated packages
        run: |
          npm outdated || true
          
      - name: Generate dependency report
        run: |
          echo "# Dependency Security Report" > dependency-report.md
          echo "Generated on: $(date)" >> dependency-report.md
          echo "" >> dependency-report.md
          echo "## Audit Results" >> dependency-report.md
          npm audit --json > audit-results.json || true
          echo "## Outdated Packages" >> dependency-report.md
          npm outdated --json > outdated-packages.json || true
          
      - name: Upload security reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            dependency-report.md
            audit-results.json
            outdated-packages.json
          retention-days: 30

  # Job para análisis de código con CodeQL
  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  # Job para verificación de secretos
  secret-scanning:
    name: Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

  # Job para verificación de licencias
  license-check:
    name: License Compliance Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install license checker
        run: npm install -g license-checker
        
      - name: Check licenses
        run: |
          license-checker --onlyAllow 'MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC;Unlicense' --excludePrivatePackages
          
      - name: Generate license report
        run: |
          license-checker --json > license-report.json
          license-checker --csv > license-report.csv
          
      - name: Upload license reports
        uses: actions/upload-artifact@v4
        with:
          name: license-reports
          path: |
            license-report.json
            license-report.csv
          retention-days: 30

  # Job para actualización automática de dependencias
  dependency-update:
    name: Dependency Updates
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Check for updates
        run: |
          npm update --dry-run
          
      - name: Create update summary
        run: |
          echo "# Dependency Update Summary" > update-summary.md
          echo "Generated on: $(date)" >> update-summary.md
          echo "" >> update-summary.md
          echo "## Available Updates" >> update-summary.md
          npm outdated >> update-summary.md || echo "No outdated packages found" >> update-summary.md
          
      - name: Upload update summary
        uses: actions/upload-artifact@v4
        with:
          name: dependency-updates
          path: update-summary.md
          retention-days: 7










